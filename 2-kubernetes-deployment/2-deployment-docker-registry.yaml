---
apiVersion: v1
kind: Namespace
metadata:
  name: docker-registry
---
kind: Service
apiVersion: v1
metadata:
  name: docker-registry
  namespace: docker-registry
  labels:
    app: docker-registry
spec:
  selector:
    app: docker-registry
  ports:
    - name: http
      port: 5000
      targetPort: 5000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry
  namespace: docker-registry
spec:
  replicas: 2
  selector:
    matchLabels:
      app: docker-registry
  template:
    metadata:
      labels:
        app: docker-registry
    spec:
      containers:
        - name: docker-registry
          image: registry:2.6.2
          imagePullPolicy: IfNotPresent
          env:
            - name: REGISTRY_HTTP_ADDR
              value: ":5000"
            - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
              value: "/var/lib/registry"
            - name: REGISTRY_AUTH
              value: "htpasswd"
            - name: REGISTRY_AUTH_HTPASSWD_REALM
              value: "Registry Realm"
            - name: REGISTRY_AUTH_HTPASSWD_PATH
              value: "/auth/htpasswd"
            - name: REGISTRY_STORAGE_CACHE_BLOBDESCRIPTOR
              value: "redis"
            - name: REGISTRY_REDIS_ADDR
              value: "$(REDIS_SERVICE_HOST):$(REDIS_SERVICE_PORT)"
            - name: REGISTRY_STORAGE_DELETE_ENABLED
              value: "true"
            - name: REGISTRY_HTTP_SECRET
              valueFrom:
                secretKeyRef:
                  name: http-secret
                  key: HTTP_SECRET
          ports:
            - name: http
              containerPort: 5000
          livenessProbe:
            httpGet:
              path: /
              port: 5000
          readinessProbe:
            httpGet:
              path: /
              port: 5000
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "500Mi"
              cpu: "200m"
          volumeMounts:
            - name: image-store
              mountPath: "/var/lib/registry"
            - name: secret-htpasswd
              mountPath: "/auth/"
              readOnly: true
      volumes:
        - name: image-store
          persistentVolumeClaim:
            claimName: pvc
        - name: secret-htpasswd
          secret:
            secretName: secret-htpasswd
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv
spec:
  accessModes:
    - ReadWriteOnce
  awsElasticBlockStore:
    fsType: xfs
    volumeID: vol-0909d3ef87b6d785b
  capacity:
    storage: 10Gi
  persistentVolumeReclaimPolicy: Retain
  storageClassName: gp2-retain
  volumeMode: Filesystem
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: docker-registry
  labels:
    app: docker-registry
  name: pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: gp2-retain
  volumeMode: Filesystem
  volumeName: pv
---
apiVersion: v1
kind: Secret
metadata:
  name: secret-htpasswd
  namespace: docker-registry
type: Opaque
stringData:
  htpasswd: |
    test:$2y$05$xtY1nm9xQIfeRaUSHghHMOZWqwM9IOkxU8009zQeITuuczi5mkoma
---
apiVersion: v1
kind: Secret
metadata:
  name: http-secret
  namespace: docker-registry
type: Opaque
stringData:
  HTTP_SECRET: bXl0ZXN0c2VjcmV0
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app: docker-registry
  name: docker-registry-hpa
  namespace: docker-registry
spec:
  maxReplicas: 8
  metrics:
    - resource:
        name: cpu
        target:
          averageUtilization: 85
          type: Utilization
      type: Resource
  minReplicas: 2
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: docker-registry
